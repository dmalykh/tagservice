// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "category_name",
				Unique:  false,
				Columns: []*schema.Column{CategoriesColumns[1]},
			},
			{
				Name:    "category_parent_id",
				Unique:  false,
				Columns: []*schema.Column{CategoriesColumns[4]},
			},
			{
				Name:    "category_name_parent_id",
				Unique:  true,
				Columns: []*schema.Column{CategoriesColumns[1], CategoriesColumns[4]},
			},
		},
	}
	// NamespacesColumns holds the columns for the "namespaces" table.
	NamespacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// NamespacesTable holds the schema information for the "namespaces" table.
	NamespacesTable = &schema.Table{
		Name:       "namespaces",
		Columns:    NamespacesColumns,
		PrimaryKey: []*schema.Column{NamespacesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "namespace_name",
				Unique:  true,
				Columns: []*schema.Column{NamespacesColumns[1]},
			},
		},
	}
	// RelationsColumns holds the columns for the "relations" table.
	RelationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "entity_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tag_id", Type: field.TypeInt},
		{Name: "namespace_id", Type: field.TypeInt},
	}
	// RelationsTable holds the schema information for the "relations" table.
	RelationsTable = &schema.Table{
		Name:       "relations",
		Columns:    RelationsColumns,
		PrimaryKey: []*schema.Column{RelationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "relations_tags_tag",
				Columns:    []*schema.Column{RelationsColumns[3]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "relations_namespaces_namespace",
				Columns:    []*schema.Column{RelationsColumns[4]},
				RefColumns: []*schema.Column{NamespacesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "relation_tag_id_namespace_id_entity_id",
				Unique:  true,
				Columns: []*schema.Column{RelationsColumns[3], RelationsColumns[4], RelationsColumns[1]},
			},
			{
				Name:    "relation_tag_id_namespace_id",
				Unique:  false,
				Columns: []*schema.Column{RelationsColumns[3], RelationsColumns[4]},
			},
			{
				Name:    "relation_tag_id",
				Unique:  false,
				Columns: []*schema.Column{RelationsColumns[3]},
			},
			{
				Name:    "relation_entity_id",
				Unique:  false,
				Columns: []*schema.Column{RelationsColumns[1]},
			},
			{
				Name:    "relation_namespace_id",
				Unique:  false,
				Columns: []*schema.Column{RelationsColumns[4]},
			},
		},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "category_id", Type: field.TypeInt},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tags_categories_category",
				Columns:    []*schema.Column{TagsColumns[4]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "tag_category_id",
				Unique:  false,
				Columns: []*schema.Column{TagsColumns[4]},
			},
			{
				Name:    "tag_name_category_id",
				Unique:  true,
				Columns: []*schema.Column{TagsColumns[1], TagsColumns[4]},
			},
		},
	}
	// CategoryChildrenColumns holds the columns for the "category_children" table.
	CategoryChildrenColumns = []*schema.Column{
		{Name: "category_id", Type: field.TypeInt},
		{Name: "parent_id", Type: field.TypeInt},
	}
	// CategoryChildrenTable holds the schema information for the "category_children" table.
	CategoryChildrenTable = &schema.Table{
		Name:       "category_children",
		Columns:    CategoryChildrenColumns,
		PrimaryKey: []*schema.Column{CategoryChildrenColumns[0], CategoryChildrenColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "category_children_category_id",
				Columns:    []*schema.Column{CategoryChildrenColumns[0]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "category_children_parent_id",
				Columns:    []*schema.Column{CategoryChildrenColumns[1]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoriesTable,
		NamespacesTable,
		RelationsTable,
		TagsTable,
		CategoryChildrenTable,
	}
)

func init() {
	RelationsTable.ForeignKeys[0].RefTable = TagsTable
	RelationsTable.ForeignKeys[1].RefTable = NamespacesTable
	TagsTable.ForeignKeys[0].RefTable = CategoriesTable
	CategoryChildrenTable.ForeignKeys[0].RefTable = CategoriesTable
	CategoryChildrenTable.ForeignKeys[1].RefTable = CategoriesTable
}
